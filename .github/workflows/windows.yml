name: Windows Build

on: [push]

jobs:
  build:
    #if: ${{ false }}  # disable for now
    runs-on: windows-2016
    env:
      VCPKG_CONCURRENCY: 1
      VCPKG_DEFAULT_TRIPLET: x64-windows
      VCPKG_MAX_CONCURRENCY: 1
      VCPKG_FEATURE_FLAGS: fastbuild,versions
    steps:
      - uses: actions/checkout@v2
      - name: mkdir
        run: |
          mkdir -p $HOME/Downloads
          mkdir -p $HOME/sbcl
          mkdir -p $HOME/quicklisp
          mkdir -p $HOME/.cache/common-lisp
          mkdir -p $HOME/AppData/Local/cache/common-lisp
        shell: bash

      - run: choco install lessmsi make 7zip wget
      - uses: lukka/run-vcpkg@v10
        id: runvcpkg
        with:
          runVcpkgFormatString: '[`install`, `--recurse`, `--x-install-root`, `$[env.VCPKG_INSTALLED_DIR]`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`]'
          vcpkgGitCommitId: 843e0ba0d8f9c9c572e45564263eedfc7745e74f
          runVcpkgInstall: true
      - run: cp -v vcpkg/packages/*/bin/*.dll C:/windows/system32/

      - name: Get Current Month
        id: current-month
        run: |
          echo "::set-output name=value::$(date -u "+%Y-%m")"
      - name: Cache SBCL Setup
        id: cache
        uses: actions/cache@v2
        env:
          cache-name: cache-sbcl-assimp-fourth
        with:
          path: |
            ~/Downloads/
            ~/quicklisp
            ~/.cache/common-lisp/
            ~/sbcl
            ~/AppData/Local/cache/common-lisp
          key: "${{ steps.current-month.outputs.value }}-${{ env.cache-name }}-${{ runner.os }}"
      - name: Restore Path To Cached Files
        run: |
          echo $HOME/sbcl/bin >> $GITHUB_PATH
        if: steps.cache.outputs.cache-hit == 'true'

      - name: Install Bootstraping SBCL 1.4.14
        run: |
          cd ~/Downloads
          wget http://prdownloads.sourceforge.net/sbcl/sbcl-1.4.14-x86-64-windows-binary.msi
          lessmsi x sbcl-1.4.14-x86-64-windows-binary.msi
          mv "sbcl-1.4.14-x86-64-windows-binary/SourceDir/PFiles/Steel Bank Common Lisp/1.4.14" sbcl_bin
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install SBCL 2.1.9
        run: |
          cd ~/Downloads
          export SBCL_HOME="$PWD/sbcl_bin";
          export PATH="$PWD/sbcl_bin:${PATH}";
          wget http://downloads.sourceforge.net/project/sbcl/sbcl/2.1.9/sbcl-2.1.9-source.tar.bz2
          tar xjf sbcl-2.1.9-source.tar.bz2
          cd sbcl-2.1.9
          sh make.sh --with-sb-core-compression
          unset SBCL_HOME
          INSTALL_ROOT=~/sbcl ./install.sh
        shell: bash
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Install quicklisp
        run: |
          export SBCL_HOME="$HOME/sbcl/lib/sbcl"
          export PATH="$HOME/sbcl/bin:${PATH}"
          cd ~/Downloads
          wget https://beta.quicklisp.org/quicklisp.lisp
          sbcl --disable-debugger \
               --eval '(load "quicklisp.lisp")' \
               --eval '(quicklisp-quickstart:install)' \
               --eval '(ql-util:without-prompting (ql:add-to-init-file))' \
               --eval '(ql:update-all-dists)' \
               --eval '(ql-dist:install-dist "http://bodge.borodust.org/dist/org.borodust.bodge.txt" :replace t :prompt nil)' \
               --quit
        shell: bash
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Get LISP deps
        run: |
          cd ~/quicklisp/local-projects/
          (test -d rocketman) || git clone --depth=1 https://github.com/azimut/rocketman
          ( cd rocketman ; git pull )
          (test -d cepl)      || git clone --depth=1 https://github.com/azimut/cepl
          ( cd cepl      ; git pull )
          (test -d glsl-spec) || git clone --depth=1 https://github.com/azimut/glsl-spec
          ( cd glsl-spec ; git pull )
          (test -d cepl.fond) || git clone --depth=1 https://github.com/cbaggers/cepl.fond
          ( cd cepl.fond ; git pull )
        shell: bash

      - name: Build Binary
        run: |
          export PATH="$HOME/sbcl/bin:${PATH}"
          cd bin/
          make scenic
        shell: bash

      - uses: actions/upload-artifact@v2
        with:
          name: scenic-x64-windows
          path: |
            bin
          if-no-files-found: error

