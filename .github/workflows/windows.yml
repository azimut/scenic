name: Windows Build

on: [push]

jobs:
  build:
    runs-on: windows-latest
    env:
      VCPKG_DEFAULT_TRIPLET: x64-windows
    steps:
      - uses: actions/checkout@v2
      # - name: Setup
      #   # 7zip cmake
      #   run: |
      #     choco install lessmsi make
      #     mkdir -pv ~/Downloads
      #     mkdir -pv ~/sbcl
      #     mkdir -pv ~/quicklisp
      #     mkdir -pv ~/.cache/common-lisp
      #     mkdir -pv ~/AppData/Local/cache/common-lisp

      - uses: lukka/run-vcpkg@v10
        with:
          vcpkgGitCommitId: 5568f110b509a9fd90711978a7cb76bae75bb092
          # runVcpkgFormatString: '[`install`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`, `mesa`, `assimp`, `sdl2`, `zlib`]'
          runVcpkgInstall: true
          #vcpkgArguments: 'mesa assimp sdl2 zlib'
      - run: find vcpkg
      #- run: ls -R vcpkg || true
      #- run: ls -R build || true
      # - name: Download SDL 2.0.3
      #   run: |
      #     cd ~/Downloads
      #     wget https://www.libsdl.org/release/SDL2-2.0.3-win32-x64.zip
      #     unzip SDL2-2.0.3-win32-x64.zip
      #     cp -v SDL2.dll C:/windows/system32/

      # - name: Build ZLIB 1.2.11
      #   run: |
      #     cd ~/Downloads
      #     wget https://zlib.net/zlib1211.zip
      #     unzip zlib1211.zip
      #     cd zlib-1.2.11/
      #     ./configure --sharedlibdir=/bin --prefix=/
      #     make SHAREDLIB=libz.dll SHAREDLIBM=libz-1.dll SHAREDLIBV=libz-1.2.11.dll LDSHAREDLIBC='' -j1
      #     cp -v libz.dll libz-1.dll libz-1.2.11.dll C:/windows/sytem32/

      # - name: Download MESA 19.2.4
      #   runs: |
      #     cd ~/Downloads
      #     wget https://github.com/pal1000/mesa-dist-win/releases/download/19.2.4/mesa3d-19.2.4-release-mingw.7z
      #     7z x mesa3d-19.2.4-release-mingw.7z
      #     cp -v x64/opengl32.dll C:/windows/system32/

      - name: Download Bootstraping SBCL 1.4.14
        run: |
          cd ~/Downloads
          wget -O sbcl.msi http://prdownloads.sourceforge.net/sbcl/sbcl-1.4.14-x86-64-windows-binary.msi
          lessmsi x sbcl.msi $(cygpath -w "`pwd`/sbcl_ex/")
          mv "sbcl_ex/SourceDir/PFiles/Steel Bank Common Lisp/1.4.14" sbcl_bin
          export SBCL_HOME="`pwd`/sbcl_bin";
          export PATH="`pwd`/sbcl_bin:${PATH}";
        #if: steps.cache.outputs.cache-hit != 'true'

      - name: Install SBCL 2.1.9
        run: |
          cd ~/Downloads
          wget http://downloads.sourceforge.net/project/sbcl/sbcl/2.1.9/sbcl-2.1.9-source.tar.bz2
          tar xjf sbcl-2.1.9-source.tar.bz2
          cd sbcl-2.1.9
          sh make.sh --with-sb-core-compression
          unset SBCL_HOME
          INSTALL_ROOT=~/sbcl ./install.sh
          export SBCL_HOME="$HOME/sbcl/lib/sbcl"
          export PATH="$HOME/sbcl/bin:${PATH}"
        #if: steps.cache.outputs.cache-hit != 'true'

      - name: Install quicklisp
        run: |
          cd ~/Downloads
          export PATH="$HOME/sbcl/bin:${PATH}"
          wget https://beta.quicklisp.org/quicklisp.lisp
          sbcl --disable-debugger \
               --eval '(load "quicklisp.lisp")' \
               --eval '(quicklisp-quickstart:install)' \
               --eval '(ql-util:without-prompting (ql:add-to-init-file))' \
               --eval '(ql:update-all-dists)' \
               --eval '(ql-dist:install-dist "http://bodge.borodust.org/dist/org.borodust.bodge.txt" :replace t :prompt nil)' \
               --quit
        #if: steps.cache.outputs.cache-hit != 'true'

      - name: Get LISP deps
        run: |
          cd ~/quicklisp/local-projects/
          (test -d rocketman) || git clone --depth=1 https://github.com/azimut/rocketman
          (test -d rocketman) && ( cd rocketman; git pull https://github.com/azimut/rocketman)
          (test -d cepl) || git clone --depth=1 https://github.com/azimut/cepl
          (test -d cepl)  && ( cd cepl ; git pull https://github.com/azimut/cepl)
          (test -d glsl-spec)  || git clone --depth=1 https://github.com/azimut/glsl-spec
          (test -d glsl-spec)  && ( cd glsl-spec ; git pull https://github.com/azimut/glsl-spec)
          (test -d cepl.fond)  || git clone --depth=1 https://github.com/cbaggers/cepl.fond
          (test -d cepl.fond)  && ( cd cepl.fond ; git pull https://github.com/cbaggers/cepl.fond)

      - name: Build Binary
        run: |
          export PATH="$HOME/sbcl/bin:${PATH}"
          cd bin/
          make scenic
          make tar

      - uses: actions/upload-artifact@v2
        with:
          name: scenic-linux
          path: |
            scenic.tar
          if-no-files-found: error
