name: Windows Build

on: [push]

jobs:
  build:
    runs-on: windows-2016
    env:
      VCPKG_DEFAULT_TRIPLET: x64-windows
      VCPKG_CONCURRENCY: 1
      VCPKG_FORCE_SYSTEM_BINARIES: 1
      VCPKG_MAX_CONCURRENCY: 1
      VCPKG_FEATURE_FLAGS: fastbuild
    steps:
      - uses: actions/checkout@v2
      # - name: Setup
      #   # 7zip cmake
      #   run: |
      #     choco install lessmsi make
      #     mkdir -pv ~/Downloads
      #     mkdir -pv ~/sbcl
      #     mkdir -pv ~/quicklisp
      #     mkdir -pv ~/.cache/common-lisp
      #     mkdir -pv ~/AppData/Local/cache/common-lisp
      - run: choco install git
      - uses: lukka/run-vcpkg@v10
        with:
          vcpkgGitUrl: https://github.com/PhoebeHui/vcpkg-tool.git#dev/Phoebe/fix_16216
          vcpkgGitCommitId: cd1a4ca245b62d08f5ed69f0695c2b3423be7988
          #vcpkgGitCommitId: 75b6191dffe3043d99eed1a60ce0c612125ff39c
          runVcpkgInstall: true
          #vcpkgArguments: 'mesa assimp sdl2 zlib'
      # - run: find vcpkg
      # #- run: ls -R vcpkg || true
      # #- run: ls -R build || true
      # - name: Download Bootstraping SBCL 1.4.14
      #   run: |
      #     cd ~/Downloads
      #     wget -O sbcl.msi http://prdownloads.sourceforge.net/sbcl/sbcl-1.4.14-x86-64-windows-binary.msi
      #     lessmsi x sbcl.msi $(cygpath -w "`pwd`/sbcl_ex/")
      #     mv "sbcl_ex/SourceDir/PFiles/Steel Bank Common Lisp/1.4.14" sbcl_bin
      #     export SBCL_HOME="`pwd`/sbcl_bin";
      #     export PATH="`pwd`/sbcl_bin:${PATH}";
      #   #if: steps.cache.outputs.cache-hit != 'true'

      # - name: Install SBCL 2.1.9
      #   run: |
      #     cd ~/Downloads
      #     wget http://downloads.sourceforge.net/project/sbcl/sbcl/2.1.9/sbcl-2.1.9-source.tar.bz2
      #     tar xjf sbcl-2.1.9-source.tar.bz2
      #     cd sbcl-2.1.9
      #     sh make.sh --with-sb-core-compression
      #     unset SBCL_HOME
      #     INSTALL_ROOT=~/sbcl ./install.sh
      #     export SBCL_HOME="$HOME/sbcl/lib/sbcl"
      #     export PATH="$HOME/sbcl/bin:${PATH}"
      #   #if: steps.cache.outputs.cache-hit != 'true'

      # - name: Install quicklisp
      #   run: |
      #     cd ~/Downloads
      #     export PATH="$HOME/sbcl/bin:${PATH}"
      #     wget https://beta.quicklisp.org/quicklisp.lisp
      #     sbcl --disable-debugger \
      #          --eval '(load "quicklisp.lisp")' \
      #          --eval '(quicklisp-quickstart:install)' \
      #          --eval '(ql-util:without-prompting (ql:add-to-init-file))' \
      #          --eval '(ql:update-all-dists)' \
      #          --eval '(ql-dist:install-dist "http://bodge.borodust.org/dist/org.borodust.bodge.txt" :replace t :prompt nil)' \
      #          --quit
      #   #if: steps.cache.outputs.cache-hit != 'true'

      # - name: Get LISP deps
      #   run: |
      #     cd ~/quicklisp/local-projects/
      #     (test -d rocketman) || git clone --depth=1 https://github.com/azimut/rocketman
      #     (test -d rocketman) && ( cd rocketman; git pull https://github.com/azimut/rocketman)
      #     (test -d cepl) || git clone --depth=1 https://github.com/azimut/cepl
      #     (test -d cepl)  && ( cd cepl ; git pull https://github.com/azimut/cepl)
      #     (test -d glsl-spec)  || git clone --depth=1 https://github.com/azimut/glsl-spec
      #     (test -d glsl-spec)  && ( cd glsl-spec ; git pull https://github.com/azimut/glsl-spec)
      #     (test -d cepl.fond)  || git clone --depth=1 https://github.com/cbaggers/cepl.fond
      #     (test -d cepl.fond)  && ( cd cepl.fond ; git pull https://github.com/cbaggers/cepl.fond)

      # - name: Build Binary
      #   run: |
      #     export PATH="$HOME/sbcl/bin:${PATH}"
      #     cd bin/
      #     make scenic
      #     make tar

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: scenic-linux
      #     path: |
      #       scenic.tar
      #     if-no-files-found: error
